/*!
 * Codecolor.js v1.0.0
 * https://codecolorjs.pw/
 *
 * (c) 2018-2019 Daniil Ryazanov <opensource@tagproject.ru>
 * Released under the MIT License.
 */

(function(a,b){"object"==typeof exports&&"undefined"!=typeof module?module.exports=b():"function"==typeof define&&define.amd?define(b):(a=a||self,a.codecolor=b())})(this,function(){"use strict";class a{constructor(a,b){this.name=a,this.expressions=b.expressions.values,this.activeExpressions=b.expressions.names,this.keywords=b.keywords.values,this.activeKeywords=b.keywords.names,this.masks=b.masks}eachExp(a){this.expressions.forEach((b,c)=>{b.forEach((b,d)=>{a(this.activeExpressions[c],b,d)})})}getKeywordName(a){const b=a[0];let c,d=0;for(;(c=this.keywords[d])&&!(c[b]&&~c[b].indexOf(a));)d++;return this.activeKeywords[d]}getMask(a,b){let c;return"undefined"!=typeof this.masks&&Array.isArray(this.masks[a])&&!!this.masks[a][b]&&(c=this.masks[a][b]),c}}class b{constructor(a,b,c,d){this.name=a,this.value=b,this.start=c,this.end=c+b.length,this.ruleIndex=d}isIncludedIn(a){return this.start>=a.start&&this.end<=a.end}isCross(a){return this.start>=a.start&&this.start<=a.end&&this.end>=a.end}isSource(){return this.name==="source"}}class c{static parse(a,b,d){const e=new c(a,b,d);return e.analize(),e.render()}constructor(a,b,c){this.code=a,this.languages=c,this.language=c[b],this.tokens=[]}analize(){let a,c,d,e,f=NaN;const{tokens:g}=this,h=a=>~~(a/2),i=(a,b)=>{if(b<=g.length&&a<b){if(e=g[b-1],e.end<=d.start)return i(b,b+h(g.length-b+1));if(e.start>=d.end)return i(a,a+h(b-a));if(d.isIncludedIn(e))return NaN;if(e.isIncludedIn(d))return 1===b?0:-(b-1);if(e.isCross(d))return-(b-1)}return b};this.language.eachExp((e,j,k)=>{var l=Math.abs,m=Math.atan2,n=Math.max;for(c=new RegExp(j,"gm");a=c.exec(this.code);)d=new b(e,a[0],a.index,k),0<=(f=i(0,n(h(g.length),1)))?0===f&&0>m(f,f)?g[l(f)]=d:g.splice(f,0,d):g[l(f)]=d})}wrap(a){const b=(a,b)=>`<span class="cc-${a}">${b}</span>`,d=a.isSource()?this.language.getKeywordName(a.value):a.name;let e;if("undefined"==typeof d)e=a.value;else{const f=this.language.getMask(d,a.ruleIndex);if("undefined"==typeof f)e=b(d,a.value);else if("string"==typeof f)e=b(f,a.value);else{const g=new RegExp(f[0],"gm"),h=[];let i,j=0;for(;i=g.exec(a.value);)h.push(a.value.substring(j,i.index),b(f[2],c.parse(i[0],f[1],this.languages))),j=g.lastIndex;h.push(a.value.substring(j,a.value.length)),e=b(d,h.join(""))}}return e}render(){let a=0;const b=[];return this.tokens.forEach(c=>{a<c.start&&b.push(this.code.substring(a,c.start)),b.push(this.wrap(c)),a=c.end}),b.push(this.code.substring(a)),b.join("")}}var d=new class{constructor(){Object.defineProperty(this,"version",{enumerable:!0,writable:!0,value:"1.0.0"}),Object.defineProperty(this,"languages",{enumerable:!0,writable:!0,value:{}})}highlight(a,b){return["<pre><code class=\"cc-container\">",c.parse(a,b||this.activeSchema,this.languages),"</code></pre>"].join("")}addSchema(b){return this.languages[b.name]=new a(b.name,b),this.activeSchema=b.name,b.name}};return d});
